from lib2to3.pytree import convert
import pandas as pd
import os


CONVERSIONS = {
    "Market code": {
        "NZX": "NZSE",
        "NASDAQ": "NasdaqGS",
        "CBOE": "ARCA"
    },
    "Transaction type": {
        "BUY": "Buy",
        "SELL": "Sell"
    }
}

TICKER_ADJUSTMENTS = {
    "Ticker Symbol": {
        "ARCA:ARKX": "BATS:ARKX"
    }
}


def run():
    """This script converts the transaction CSV generated by Sharesies into a
    CSV readable by Simply Wall Street's Portfolio function.
    """

    raw_df = get_dataframe()
    converted_df = convert_dataframe(raw_df)
    success = export_dataframe_to_csv(converted_df)

    if success:
        print("CSV converted and saved to the same location as the original file.")
    else:
        print("There was an error creating the new file.")


def get_dataframe() -> pd.DataFrame:
    """Takes the path to the transaction-report.csv export from Sharesies
    and creates a Pandas Dataframe.

    Returns:
        pd.Dataframe: a Pandas Dataframe containing the data from Sharesies'
        transaction-report.csv export.
    """

    # file_path = os.path.abspath(input("File path: ")).strip()
    file_path = os.path.abspath(
        "/Users/mjvdw/Downloads/transaction-report.csv").strip()
    df = pd.read_csv(file_path)
    return df


def convert_dataframe(df: pd.DataFrame) -> pd.DataFrame:
    """Copy and modify (as necessary) the columns from the original
    dataframe based on the Sharesies' transaction-report.csv and add
    to a "converted" dataframe for export.

    Args:
        df (pd.DataFrame): The dataframe with the original Sharesies
        transaction data.

    Returns:
        pd.DataFrame: The converted dataframe in the format expected by
        Simply Wall Street.
    """

    converted_df = pd.DataFrame()

    # Replace terminology as needed.
    df = df.replace(CONVERSIONS)

    # Generate "Ticker Symbols" column
    df = df.loc[df["Market code"] != "FundNZ"]
    converted_df["Ticker Symbol"] = df["Market code"] + \
        ":" + df["Instrument code"]

    # Generate "Date" column.
    df["Trade date"] = df["Trade date"].apply(lambda x: x[:10])
    converted_df["Date (yyyy-mm-dd)"] = pd.to_datetime(df["Trade date"])

    # Copy across other columns.
    converted_df["Shares"] = df["Quantity"].apply(lambda x: '%.8f' % x)
    converted_df["Price"] = df["Price"]
    converted_df["Type"] = df["Transaction type"]

    # Final ticker adjustments
    converted_df = converted_df.replace(TICKER_ADJUSTMENTS)

    print(converted_df["Shares"].tail(50))

    return converted_df


def export_dataframe_to_csv(df: pd.DataFrame) -> bool:
    username = os.getlogin()
    filename = "sharesight-transaction-report.csv"
    file_path = f"/Users/{username}/Desktop/{filename}"
    df.to_csv(os.path.abspath(file_path))

    try:
        return True
    except:
        return False


if __name__ == "__main__":
    run()
